{"version":3,"file":"testwidget_lib_browser_testwidget-frontend-module_js.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACmH;AACjB;AAClG,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4GAA4G,YAAY,WAAW,YAAY,WAAW,YAAY,MAAM,YAAY,MAAM,UAAU,YAAY,aAAa,aAAa,cAAc,aAAa,WAAW,UAAU,UAAU,UAAU,KAAK,KAAK,YAAY,WAAW,MAAM,KAAK,YAAY,WAAW,MAAM,KAAK,UAAU,YAAY,MAAM,KAAK,YAAY,aAAa,aAAa,aAAa,OAAO,KAAK,YAAY,aAAa,OAAO,YAAY,MAAM,UAAU,YAAY,aAAa,aAAa,WAAW,MAAM,KAAK,UAAU,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,aAAa,WAAW,UAAU,YAAY,WAAW,OAAO,KAAK,YAAY,MAAM,KAAK,YAAY,aAAa,MAAM,KAAK,YAAY,aAAa,MAAM,MAAM,UAAU,YAAY,aAAa,aAAa,aAAa,MAAM,KAAK,YAAY,aAAa,aAAa,MAAM,KAAK,YAAY,aAAa,aAAa,gDAAgD,uCAAuC,oBAAoB,qBAAqB,kBAAkB,8BAA8B,GAAG,gCAAgC,gBAAgB,2BAA2B,uBAAuB,qBAAqB,2BAA2B,yBAAyB,WAAW,YAAY,aAAa,gBAAgB,GAAG,kBAAkB,uBAAuB,iBAAiB,GAAG,oBAAoB,uBAAuB,oBAAoB,GAAG,oBAAoB,cAAc,wBAAwB,GAAG,YAAY,8BAA8B,sBAAsB,uBAAuB,uBAAuB,GAAG,mBAAmB,8BAA8B,sBAAsB,GAAG,wEAAwE,kBAAkB,wBAAwB,2BAA2B,uBAAuB,cAAc,GAAG,kBAAkB,YAAY,iBAAiB,2BAA2B,uBAAuB,GAAG,kBAAkB,sBAAsB,2BAA2B,gCAAgC,gBAAgB,iBAAiB,uBAAuB,oBAAoB,GAAG,wBAAwB,8BAA8B,GAAG,cAAc,sBAAsB,uBAAuB,GAAG,aAAa,qBAAqB,uBAAuB,GAAG,8BAA8B,oBAAoB,0BAA0B,wBAAwB,sBAAsB,wBAAwB,GAAG,gBAAgB,sBAAsB,iCAAiC,oCAAoC,GAAG,eAAe,uBAAuB,kCAAkC,qCAAqC,GAAG,qBAAqB;AACvwF;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;;;AC5GvC,iFAAgC;AAChC,yGAA6C;AAC7C,qIAIsC;AACtC,6DAA6D;AAC7D,iGAA0B;AAC1B,MAAa,OAAQ,SAAQ,KAAK,CAAC,SAAc;IAS/C,YAAY,KAAU;QACpB,KAAK,CAAC,KAAK,CAAC,CAAC;QAPf,0EAA0E;QAC1E,UAAK,GAAG;YACN,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;SACb,CAAC;QAIA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,iDAAiD;IAC3G,CAAC;IACS,eAAe,CAAC,KAA0C;QAClE,mCAAmC;QACnC,IAAI,CAAC,QAAQ,iCAAM,IAAI,CAAC,KAAK,KAAE,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,IAAG,CAAC;IAChE,CAAC;IAES,KAAK,CAAC,aAAa,KAAI,CAAC;IACxB,cAAc;QACtB,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC;gBACZ,QAAQ,EAAE;oBACR,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;oBACtB,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;iBAC9C;gBACD,OAAO,EAAE,EAAE;aACZ,CAAC,CAAC;SACJ;QACD,eAAK;aACF,IAAI,CAAC,oCAAoC,EAAE;YAC1C,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;SAC5B,CAAC;aACD,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjB,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC;gBACZ,QAAQ,EAAE;oBACR,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;oBACtB,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE;iBACtC;gBACD,OAAO,EAAE,EAAE;aACZ,CAAC,CAAC;QACL,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAQ,EAAE,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAEQ,MAAM;QACb,OAAO,CACL;YACE,6BAAK,SAAS,EAAC,SAAS;gBACtB,6BAAK,SAAS,EAAC,eAAe;oBAC5B,6BAAK,SAAS,EAAC,eAAe,EAAC,EAAE,EAAC,eAAe,IAC9C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,KAAa,EAAE,EAAE;wBACnD,OAAO,CACL,6BAAK,GAAG,EAAE,KAAK,IACZ,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,CACpB,6BAAK,SAAS,EAAC,WAAW;4BACxB,+BAAI,GAAG,CAAC,OAAO,CAAK,CAChB,CACP,CAAC,CAAC,CAAC,CACF,6BAAK,SAAS,EAAC,UAAU;4BACvB,+BAAI,GAAG,CAAC,OAAO,CAAK,CAChB,CACP,CACG,CACP,CAAC;oBACJ,CAAC,CAAC,CACE;oBACN,6BAAK,SAAS,EAAC,iBAAiB;wBAC9B,+BACE,IAAI,EAAC,MAAM,EACX,SAAS,EAAC,aAAa,EACvB,EAAE,EAAC,YAAY,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EACzB,WAAW,EAAC,mBAAmB,EAC/B,QAAQ,EAAE,IAAI,CAAC,eAAe,GAC9B;wBACF,gCACE,SAAS,EAAC,aAAa,EACvB,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,WAG/B,CACL,CACF,CACF,CACL,CACJ,CAAC;IACJ,CAAC;CACF;AAzFC;IADC,sBAAM,EAAC,qBAAc,CAAC;8BACa,qBAAc;+CAAC;AAFrD,0BA2FC;;;;;;;;;;;;;;;;;;;;;;;ACpGD,qIAA0D;AAE1D,6HAAuD;AACvD,yHAAmE;AAGtD,yBAAiB,GAAY,EAAE,EAAE,EAAE,oBAAoB,EAAE,CAAC;AAGvE,IAAa,sBAAsB,GAAnC,MAAa,sBAAuB,SAAQ,kCAA0C;IAElF;;;;;;;OAOG;IACH;QACI,KAAK,CAAC;YACF,QAAQ,EAAE,oCAAgB,CAAC,EAAE;YAC7B,UAAU,EAAE,oCAAgB,CAAC,KAAK;YAClC,oBAAoB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACtC,eAAe,EAAE,yBAAiB,CAAC,EAAE;SACxC,CAAC,CAAC;IACP,CAAC;IAED;;;;;;;;;;;;;;;;;OAiBG;IACH,gBAAgB,CAAC,QAAyB;QACtC,QAAQ,CAAC,eAAe,CAAC,yBAAiB,EAAE;YACxC,OAAO,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;SACnE,CAAC,CAAC;IACP,CAAC;IAED;;;;;;;;;;;;;OAaG;IACH,aAAa,CAAC,KAAwB;QAClC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;CACJ;AA5DY,sBAAsB;IADlC,0BAAU,GAAE;;GACA,sBAAsB,CA4DlC;AA5DY,wDAAsB;;;;;;;;;;;;;ACTnC,qIAA+D;AAC/D,6HAAuD;AACvD,+IAAmE;AACnE,yHAA+G;AAE/G,0GAA2C;AAE3C,qBAAe,IAAI,2BAAe,CAAC,IAAI,CAAC,EAAE;IACtC,kCAAoB,EAAC,IAAI,EAAE,gDAAsB,CAAC,CAAC;IACnD,IAAI,CAAC,yCAA+B,CAAC,CAAC,SAAS,CAAC,gDAAsB,CAAC,CAAC;IACxE,IAAI,CAAC,oCAAgB,CAAC,CAAC,MAAM,EAAE,CAAC;IAChC,IAAI,CAAC,uBAAa,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACvC,EAAE,EAAE,oCAAgB,CAAC,EAAE;QACvB,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAmB,oCAAgB,CAAC;KAC5E,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;AAC3B,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACfH,iFAA+B;AAC/B,qIAIsC;AACtC,kKAA2E;AAC3E,yGAA6C;AAE7C,+FAAkC;AAIlC,IAAa,gBAAgB,wBAA7B,MAAa,gBAAiB,SAAQ,0BAAW;IAQrC,IAAI;QACZ,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAES,KAAK,CAAC,MAAM;QACpB,IAAI,CAAC,EAAE,GAAG,kBAAgB,CAAC,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,kBAAgB,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,kBAAgB,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,uBAAuB,CAAC,CAAC,uBAAuB;QACvE,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,MAAM;QACJ,OAAO,CACL,6BAAK,EAAE,EAAC,kBAAkB;YACxB,oBAAC,iBAAO,OAAG,CACP,CACP,CAAC;IACJ,CAAC;IAES,cAAc;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,0DAA0D,CAC3D,CAAC;IACJ,CAAC;IAES,iBAAiB,CAAC,GAAY;QACtC,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;QACpE,IAAI,WAAW,EAAE;YACf,WAAW,CAAC,KAAK,EAAE,CAAC;SACrB;IACH,CAAC;CACF;AAzCiB,mBAAE,GAAG,mBAAoB;AACzB,sBAAK,GAAG,mBAAoB;AAG5C;IADC,sBAAM,EAAC,qBAAc,CAAC;8BACa,qBAAc;wDAAC;AAGnD;IADC,6BAAa,GAAE;;;;4CAGf;AAVU,gBAAgB;IAD5B,0BAAU,GAAE;GACA,gBAAgB,CA0C5B;AA1CY,4CAAgB;;;;;;;;;;;;;;;;;;ACbqE;AAClG,YAAgG;;AAEhG;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,sFAAO,aAAa","sources":["webpack:///../testwidget/src/browser/style/index.css?../node_modules/css-loader/dist/cjs.js","webpack:///../testwidget/src/browser/Chatbot.tsx?","webpack:///../testwidget/src/browser/testwidget-contribution.ts?","webpack:///../testwidget/src/browser/testwidget-frontend-module.ts?","webpack:///../testwidget/src/browser/testwidget-widget.tsx?","webpack:///../testwidget/src/browser/style/index.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `#widget-container h2 {\n  color: var(--theia-ui-font-color1);\n  font-size: 12px;\n  font-weight: 400;\n  padding: 10px;\n  text-transform: uppercase;\n}\n/* chatbot box  */\n.chatbox {\n  width: 100%;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  overflow: hidden;\n  box-sizing: border-box;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 1px;\n}\n.chatbot-inner {\n  position: relative;\n  height: 100%;\n}\n\n.chat-messages {\n  overflow-y: hidden;\n  padding: 10px 0;\n}\n.chat-messages p {\n  margin: 0;\n  margin-bottom: 10px;\n}\n.message {\n  background-color: #f1f1f1;\n  padding: 5px 10px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n}\n\n.message.user {\n  background-color: #d3f7cd;\n  text-align: right;\n}\n\n/* Styles for the input field and send button */\n.input-container {\n  display: flex;\n  align-items: center;\n  background-color: #fff;\n  position: absolute;\n  bottom: 0;\n}\n\n.input-field {\n  flex: 1;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n}\n\n.send-button {\n  padding: 8px 15px;\n  /* margin-left: 5px;   */\n  background-color: #4caf50;\n  color: #fff;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n}\n\n.send-button:hover {\n  background-color: #45a049;\n}\n.user-chat {\n  text-align: right;\n  margin-bottom: 6px;\n}\n.bot-chat {\n  text-align: left;\n  margin-bottom: 6px;\n}\n.user-chat p,\n.bot-chat p {\n  font-size: 14px;\n  display: inline-block;\n  background: #d8d8d8;\n  padding: 0px 10px;\n  padding-bottom: 4px;\n}\n.user-chat p {\n  margin-left: 25px;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n}\n.bot-chat p {\n  margin-right: 25px;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../testwidget/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kCAAkC;EAClC,eAAe;EACf,gBAAgB;EAChB,aAAa;EACb,yBAAyB;AAC3B;AACA,iBAAiB;AACjB;EACE,WAAW;EACX,sBAAsB;EACtB,kBAAkB;EAClB,gBAAgB;EAChB,sBAAsB;;EAEtB,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,eAAe;AACjB;AACA;EACE,SAAS;EACT,mBAAmB;AACrB;AACA;EACE,yBAAyB;EACzB,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA,+CAA+C;AAC/C;EACE,aAAa;EACb,mBAAmB;EACnB,sBAAsB;EACtB,kBAAkB;EAClB,SAAS;AACX;;AAEA;EACE,OAAO;EACP,YAAY;EACZ,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,wBAAwB;EACxB,yBAAyB;EACzB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;AACA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;AACA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;AACA;;EAEE,eAAe;EACf,qBAAqB;EACrB,mBAAmB;EACnB,iBAAiB;EACjB,mBAAmB;AACrB;AACA;EACE,iBAAiB;EACjB,4BAA4B;EAC5B,+BAA+B;AACjC;AACA;EACE,kBAAkB;EAClB,6BAA6B;EAC7B,gCAAgC;AAClC\",\"sourcesContent\":[\"#widget-container h2 {\\n  color: var(--theia-ui-font-color1);\\n  font-size: 12px;\\n  font-weight: 400;\\n  padding: 10px;\\n  text-transform: uppercase;\\n}\\n/* chatbot box  */\\n.chatbox {\\n  width: 100%;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  overflow: hidden;\\n  box-sizing: border-box;\\n\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 1px;\\n}\\n.chatbot-inner {\\n  position: relative;\\n  height: 100%;\\n}\\n\\n.chat-messages {\\n  overflow-y: hidden;\\n  padding: 10px 0;\\n}\\n.chat-messages p {\\n  margin: 0;\\n  margin-bottom: 10px;\\n}\\n.message {\\n  background-color: #f1f1f1;\\n  padding: 5px 10px;\\n  margin-bottom: 5px;\\n  border-radius: 5px;\\n}\\n\\n.message.user {\\n  background-color: #d3f7cd;\\n  text-align: right;\\n}\\n\\n/* Styles for the input field and send button */\\n.input-container {\\n  display: flex;\\n  align-items: center;\\n  background-color: #fff;\\n  position: absolute;\\n  bottom: 0;\\n}\\n\\n.input-field {\\n  flex: 1;\\n  padding: 8px;\\n  border: 1px solid #ccc;\\n  border-radius: 3px;\\n}\\n\\n.send-button {\\n  padding: 8px 15px;\\n  /* margin-left: 5px;   */\\n  background-color: #4caf50;\\n  color: #fff;\\n  border: none;\\n  border-radius: 3px;\\n  cursor: pointer;\\n}\\n\\n.send-button:hover {\\n  background-color: #45a049;\\n}\\n.user-chat {\\n  text-align: right;\\n  margin-bottom: 6px;\\n}\\n.bot-chat {\\n  text-align: left;\\n  margin-bottom: 6px;\\n}\\n.user-chat p,\\n.bot-chat p {\\n  font-size: 14px;\\n  display: inline-block;\\n  background: #d8d8d8;\\n  padding: 0px 10px;\\n  padding-bottom: 4px;\\n}\\n.user-chat p {\\n  margin-left: 25px;\\n  border-top-left-radius: 10px;\\n  border-bottom-left-radius: 10px;\\n}\\n.bot-chat p {\\n  margin-right: 25px;\\n  border-top-right-radius: 10px;\\n  border-bottom-right-radius: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React = require(\"react\");\r\nimport { MessageService } from \"@theia/core\";\r\nimport {\r\n  inject,\r\n  injectable,\r\n  postConstruct,\r\n} from \"@theia/core/shared/inversify\";\r\n// import { EditorManager } from \"@theia/editor/lib/browser\";\r\nimport axios from \"axios\";\r\nexport class Chatbot extends React.Component<any> {\r\n  @inject(MessageService)\r\n  protected readonly messageService!: MessageService;\r\n  // @inject(EditorManager) protected readonly editorManager: EditorManager;\r\n  state = {\r\n    message: \"\",\r\n    messages: [],\r\n  };\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.onChangeHandler = this.onChangeHandler.bind(this); // Bind onChangeHandler method in the constructor\r\n  }\r\n  protected onChangeHandler(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    // console.log(event.target.value);\r\n    this.setState({ ...this.state, message: event.target.value });\r\n  }\r\n\r\n  protected async replaceResult() {}\r\n  protected displayMessage(): void {\r\n    if (this.state.message != \"\") {\r\n      this.setState({\r\n        messages: [\r\n          ...this.state.messages,\r\n          { type: \"user\", message: this.state.message },\r\n        ],\r\n        message: \"\",\r\n      });\r\n    }\r\n    axios\r\n      .post(\"http://localhost:8001/send-message\", {\r\n        message: this.state.message,\r\n      })\r\n      .then((res: any) => {\r\n        const { data } = res.data;\r\n        this.setState({\r\n          messages: [\r\n            ...this.state.messages,\r\n            { type: \"bot\", message: data.answer },\r\n          ],\r\n          message: \"\",\r\n        });\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  override render(): React.ReactNode {\r\n    return (\r\n      <>\r\n        <div className=\"chatbox\">\r\n          <div className=\"chatbot-inner\">\r\n            <div className=\"chat-messages\" id=\"chat-messages\">\r\n              {this.state.messages.map((msg: any, index: number) => {\r\n                return (\r\n                  <div key={index}>\r\n                    {msg.type == \"user\" ? (\r\n                      <div className=\"user-chat\">\r\n                        <p>{msg.message}</p>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"bot-chat\">\r\n                        <p>{msg.message}</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"user-input\"\r\n                value={this.state.message}\r\n                placeholder=\"Type a message...\"\r\n                onChange={this.onChangeHandler}\r\n              />\r\n              <button\r\n                className=\"send-button\"\r\n                onClick={(_a) => this.displayMessage()}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { injectable } from '@theia/core/shared/inversify';\nimport { MenuModelRegistry } from '@theia/core';\nimport { TestwidgetWidget } from './testwidget-widget';\nimport { AbstractViewContribution } from '@theia/core/lib/browser';\nimport { Command, CommandRegistry } from '@theia/core/lib/common/command';\n\nexport const TestwidgetCommand: Command = { id: 'testwidget:command' };\n\n@injectable()\nexport class TestwidgetContribution extends AbstractViewContribution<TestwidgetWidget> {\n\n    /**\n     * `AbstractViewContribution` handles the creation and registering\n     *  of the widget including commands, menus, and keybindings.\n     * \n     * We can pass `defaultWidgetOptions` which define widget properties such as \n     * its location `area` (`main`, `left`, `right`, `bottom`), `mode`, and `ref`.\n     * \n     */\n    constructor() {\n        super({\n            widgetId: TestwidgetWidget.ID,\n            widgetName: TestwidgetWidget.LABEL,\n            defaultWidgetOptions: { area: 'left' },\n            toggleCommandId: TestwidgetCommand.id\n        });\n    }\n\n    /**\n     * Example command registration to open the widget from the menu, and quick-open.\n     * For a simpler use case, it is possible to simply call:\n     ```ts\n        super.registerCommands(commands)\n     ```\n     *\n     * For more flexibility, we can pass `OpenViewArguments` which define \n     * options on how to handle opening the widget:\n     * \n     ```ts\n        toggle?: boolean\n        activate?: boolean;\n        reveal?: boolean;\n     ```\n     *\n     * @param commands\n     */\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(TestwidgetCommand, {\n            execute: () => super.openView({ activate: false, reveal: true })\n        });\n    }\n\n    /**\n     * Example menu registration to contribute a menu item used to open the widget.\n     * Default location when extending the `AbstractViewContribution` is the `View` main-menu item.\n     * \n     * We can however define new menu path locations in the following way:\n     ```ts\n        menus.registerMenuAction(CommonMenus.HELP, {\n            commandId: 'id',\n            label: 'label'\n        });\n     ```\n     * \n     * @param menus\n     */\n    registerMenus(menus: MenuModelRegistry): void {\n        super.registerMenus(menus);\n    }\n}\n","import { ContainerModule } from '@theia/core/shared/inversify';\nimport { TestwidgetWidget } from './testwidget-widget';\nimport { TestwidgetContribution } from './testwidget-contribution';\nimport { bindViewContribution, FrontendApplicationContribution, WidgetFactory } from '@theia/core/lib/browser';\n\nimport '../../src/browser/style/index.css';\n\nexport default new ContainerModule(bind => {\n    bindViewContribution(bind, TestwidgetContribution);\n    bind(FrontendApplicationContribution).toService(TestwidgetContribution);\n    bind(TestwidgetWidget).toSelf();\n    bind(WidgetFactory).toDynamicValue(ctx => ({\n        id: TestwidgetWidget.ID,\n        createWidget: () => ctx.container.get<TestwidgetWidget>(TestwidgetWidget)\n    })).inSingletonScope();\n});\n","import * as React from \"react\";\nimport {\n  injectable,\n  postConstruct,\n  inject,\n} from \"@theia/core/shared/inversify\";\nimport { ReactWidget } from \"@theia/core/lib/browser/widgets/react-widget\";\nimport { MessageService } from \"@theia/core\";\nimport { Message } from \"@theia/core/lib/browser\";\nimport {Chatbot} from \"./Chatbot\";\n\n\n@injectable()\nexport class TestwidgetWidget extends ReactWidget {\n  static readonly ID = \"testwidget:widget\";\n  static readonly LABEL = \"Testwidget Widget\";\n\n  @inject(MessageService)\n  protected readonly messageService!: MessageService;\n\n  @postConstruct()\n  protected init(): void {\n    this.doInit();\n  }\n\n  protected async doInit(): Promise<void> {\n    this.id = TestwidgetWidget.ID;\n    this.title.label = TestwidgetWidget.LABEL;\n    this.title.caption = TestwidgetWidget.LABEL;\n    this.title.closable = true;\n    this.title.iconClass = \"fa fa-window-maximize\"; // example widget icon.\n    this.update();\n  }\n\n  render(): React.ReactElement {\n    return (\n      <div id=\"widget-container\">\n        <Chatbot />\n      </div>\n    );\n  }\n\n  protected displayMessage(): void {\n    this.messageService.info(\n      \"Congratulations: Testwidget Widget Successfully Created!\"\n    );\n  }\n\n  protected onActivateRequest(msg: Message): void {\n    super.onActivateRequest(msg);\n    const htmlElement = document.getElementById(\"displayMessageButton\");\n    if (htmlElement) {\n      htmlElement.focus();\n    }\n  }\n}\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}
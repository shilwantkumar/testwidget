{"version":3,"file":"vendors-node_modules_theia_markers_lib_browser_problem_problem-frontend-module_js.js","mappings":"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","sources":["webpack:///../node_modules/@theia/markers/src/browser/style/index.css?../node_modules/css-loader/dist/cjs.js","webpack:///../node_modules/@theia/markers/src/browser/marker-tree-label-provider.ts?","webpack:///../node_modules/@theia/markers/src/browser/marker-tree-model.ts?","webpack:///../node_modules/@theia/markers/src/browser/marker-tree.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-composite-tree-node.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-container.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-contribution.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-decorations-provider.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-frontend-module.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-layout-migrations.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-preferences.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-selection.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-tabbar-decorator.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-tree-model.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-utils.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-widget-tab-bar-decorator.ts?","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-widget.tsx?","webpack:///../node_modules/@theia/workspace/src/browser/index.ts?","webpack:///../node_modules/@theia/markers/src/browser/style/index.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-marker-container {\n  font-size: var(--theia-ui-font-size1);\n}\n\n.theia-side-panel .theia-marker-container .noMarkers {\n  padding-left: 19px;\n}\n\n.theia-marker-container .markerNode,\n.theia-marker-container .markerFileNode {\n  display: flex;\n  align-items: center;\n}\n\n.theia-marker-container .markerNode div,\n.theia-marker-container .markerFileNode div:not(.file-icon) {\n  display: flex;\n  margin-right: 5px;\n}\n\n.theia-marker-container .markerFileNode .name,\n.theia-marker-container .markerFileNode .path {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.theia-marker-container .markerFileNode .path {\n  font-size: var(--theia-ui-font-size0);\n  align-self: flex-end;\n  white-space: nowrap;\n}\n\n.theia-marker-container .error {\n  color: var(--theia-editorError-foreground);\n  opacity: 1;\n}\n\n.theia-marker-container .warning {\n  color: var(--theia-editorWarning-foreground);\n  opacity: 1;\n}\n\n.theia-marker-container .information {\n  color: var(--theia-editorInfo-foreground);\n  opacity: 1;\n}\n\n.theia-marker-container .hint {\n  color: var(--theia-successBackground);\n  opacity: 1;\n}\n\n.theia-marker-container .markerNode .position,\n.theia-marker-container .markerNode .owner {\n  white-space: nowrap;\n  margin-left: 5px;\n}\n\n.theia-marker-container .markerNode .message {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.theia-marker-container .row-button-container {\n  display: none;\n}\n\n.theia-marker-container .theia-TreeNodeContent:hover .row-button-container {\n  display: flex;\n  justify-content: flex-end;\n  flex: 1;\n  align-items: center;\n  align-self: center;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/@theia/markers/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,qCAAqC;AACvC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,aAAa;EACb,mBAAmB;AACrB;;AAEA;;EAEE,aAAa;EACb,iBAAiB;AACnB;;AAEA;;EAEE,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,qCAAqC;EACrC,oBAAoB;EACpB,mBAAmB;AACrB;;AAEA;EACE,0CAA0C;EAC1C,UAAU;AACZ;;AAEA;EACE,4CAA4C;EAC5C,UAAU;AACZ;;AAEA;EACE,yCAAyC;EACzC,UAAU;AACZ;;AAEA;EACE,qCAAqC;EACrC,UAAU;AACZ;;AAEA;;EAEE,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,yBAAyB;EACzB,OAAO;EACP,mBAAmB;EACnB,kBAAkB;AACpB\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2017 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-marker-container {\\n  font-size: var(--theia-ui-font-size1);\\n}\\n\\n.theia-side-panel .theia-marker-container .noMarkers {\\n  padding-left: 19px;\\n}\\n\\n.theia-marker-container .markerNode,\\n.theia-marker-container .markerFileNode {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.theia-marker-container .markerNode div,\\n.theia-marker-container .markerFileNode div:not(.file-icon) {\\n  display: flex;\\n  margin-right: 5px;\\n}\\n\\n.theia-marker-container .markerFileNode .name,\\n.theia-marker-container .markerFileNode .path {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.theia-marker-container .markerFileNode .path {\\n  font-size: var(--theia-ui-font-size0);\\n  align-self: flex-end;\\n  white-space: nowrap;\\n}\\n\\n.theia-marker-container .error {\\n  color: var(--theia-editorError-foreground);\\n  opacity: 1;\\n}\\n\\n.theia-marker-container .warning {\\n  color: var(--theia-editorWarning-foreground);\\n  opacity: 1;\\n}\\n\\n.theia-marker-container .information {\\n  color: var(--theia-editorInfo-foreground);\\n  opacity: 1;\\n}\\n\\n.theia-marker-container .hint {\\n  color: var(--theia-successBackground);\\n  opacity: 1;\\n}\\n\\n.theia-marker-container .markerNode .position,\\n.theia-marker-container .markerNode .owner {\\n  white-space: nowrap;\\n  margin-left: 5px;\\n}\\n\\n.theia-marker-container .markerNode .message {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.theia-marker-container .row-button-container {\\n  display: none;\\n}\\n\\n.theia-marker-container .theia-TreeNodeContent:hover .row-button-container {\\n  display: flex;\\n  justify-content: flex-end;\\n  flex: 1;\\n  align-items: center;\\n  align-self: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { LabelProvider, LabelProviderContribution, DidChangeLabelEvent } from '@theia/core/lib/browser/label-provider';\nimport { MarkerInfoNode } from './marker-tree';\nimport { TreeLabelProvider } from '@theia/core/lib/browser/tree/tree-label-provider';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\n@injectable()\nexport class MarkerTreeLabelProvider implements LabelProviderContribution {\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(TreeLabelProvider)\n    protected readonly treeLabelProvider: TreeLabelProvider;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    canHandle(element: object): number {\n        return MarkerInfoNode.is(element) ?\n            this.treeLabelProvider.canHandle(element) + 1 :\n            0;\n    }\n\n    getIcon(node: MarkerInfoNode): string {\n        return this.labelProvider.getIcon(node.uri);\n    }\n\n    getName(node: MarkerInfoNode): string {\n        return this.labelProvider.getName(node.uri);\n    }\n\n    getLongName(node: MarkerInfoNode): string {\n        const description: string[] = [];\n        const rootUri = this.workspaceService.getWorkspaceRootUri(node.uri);\n        // In a multiple-root workspace include the root name to the label before the parent directory.\n        if (this.workspaceService.isMultiRootWorkspaceOpened && rootUri) {\n            description.push(this.labelProvider.getName(rootUri));\n        }\n        // If the given resource is not at the workspace root, include the parent directory to the label.\n        if (rootUri && rootUri.toString() !== node.uri.parent.toString()) {\n            description.push(this.labelProvider.getLongName(node.uri.parent));\n        }\n        // Get the full path of a resource which does not exist in the given workspace.\n        if (!rootUri) {\n            description.push(this.labelProvider.getLongName(node.uri.parent.withScheme('markers')));\n        }\n        return description.join(' ● ');\n    }\n\n    getDescription(node: MarkerInfoNode): string {\n        return this.labelProvider.getLongName(node.uri.parent);\n    }\n\n    affects(node: MarkerInfoNode, event: DidChangeLabelEvent): boolean {\n        return event.affects(node.uri) || event.affects(node.uri.parent);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { MarkerNode } from './marker-tree';\nimport { TreeModelImpl, OpenerService, open, TreeNode, OpenerOptions } from '@theia/core/lib/browser';\n\n@injectable()\nexport class MarkerTreeModel extends TreeModelImpl {\n\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n\n    protected override doOpenNode(node: TreeNode): void {\n        if (MarkerNode.is(node)) {\n            open(this.openerService, node.uri, this.getOpenerOptionsByMarker(node));\n        } else {\n            super.doOpenNode(node);\n        }\n    }\n\n    protected getOpenerOptionsByMarker(node: MarkerNode): OpenerOptions | undefined {\n        return undefined;\n    }\n\n    /**\n     * Reveal the corresponding node at the marker.\n     * @param node {TreeNode} the tree node.\n     */\n    revealNode(node: TreeNode): void {\n        if (MarkerNode.is(node)) {\n            open(this.openerService, node.uri, { ...this.getOpenerOptionsByMarker(node), mode: 'reveal' });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { TreeImpl, CompositeTreeNode, TreeNode, SelectableTreeNode, ExpandableTreeNode } from '@theia/core/lib/browser';\nimport { MarkerManager } from './marker-manager';\nimport { Marker } from '../common/marker';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport URI from '@theia/core/lib/common/uri';\nimport { ProblemSelection } from './problem/problem-selection';\nimport { DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport const MarkerOptions = Symbol('MarkerOptions');\nexport interface MarkerOptions {\n    readonly kind: string;\n}\n\n@injectable()\nexport abstract class MarkerTree<T extends object> extends TreeImpl {\n\n    constructor(\n        protected readonly markerManager: MarkerManager<T>,\n        protected readonly markerOptions: MarkerOptions\n    ) {\n        super();\n\n        this.toDispose.push(markerManager.onDidChangeMarkers(uri => this.refreshMarkerInfo(uri)));\n\n        this.root = <MarkerRootNode>{\n            visible: false,\n            id: 'theia-' + markerOptions.kind + '-marker-widget',\n            name: 'MarkerTree',\n            kind: markerOptions.kind,\n            children: [],\n            parent: undefined\n        };\n    }\n\n    protected async refreshMarkerInfo(uri: URI): Promise<void> {\n        const id = uri.toString();\n        const existing = this.getNode(id);\n        const markers = this.markerManager.findMarkers({ uri });\n        if (markers.length <= 0) {\n            if (MarkerInfoNode.is(existing)) {\n                CompositeTreeNode.removeChild(existing.parent, existing);\n                this.removeNode(existing);\n                this.fireChanged();\n            }\n            return;\n        }\n        const node = MarkerInfoNode.is(existing) ? existing : this.createMarkerInfo(id, uri);\n        this.insertNodeWithMarkers(node, markers);\n    }\n\n    protected insertNodeWithMarkers(node: MarkerInfoNode, markers: Marker<T>[]): void {\n        CompositeTreeNode.addChild(node.parent, node);\n        const children = this.getMarkerNodes(node, markers);\n        node.numberOfMarkers = markers.length;\n        this.setChildren(node, children);\n    }\n\n    protected override async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (MarkerRootNode.is(parent)) {\n            const nodes: MarkerInfoNode[] = [];\n            for (const id of this.markerManager.getUris()) {\n                const uri = new URI(id);\n                const existing = this.getNode(id);\n                const markers = this.markerManager.findMarkers({ uri });\n                const node = MarkerInfoNode.is(existing) ? existing : this.createMarkerInfo(id, uri);\n                node.children = this.getMarkerNodes(node, markers);\n                node.numberOfMarkers = node.children.length;\n                nodes.push(node);\n            }\n            return nodes;\n        }\n        return super.resolveChildren(parent);\n    }\n\n    protected createMarkerInfo(id: string, uri: URI): MarkerInfoNode {\n        return {\n            children: [],\n            expanded: true,\n            uri,\n            id,\n            parent: this.root as MarkerRootNode,\n            selected: false,\n            numberOfMarkers: 0\n        };\n    }\n\n    protected getMarkerNodes(parent: MarkerInfoNode, markers: Marker<T>[]): MarkerNode[] {\n        return markers.map((marker, index) =>\n            this.createMarkerNode(marker, index, parent)\n        );\n    }\n    protected createMarkerNode(marker: Marker<T>, index: number, parent: MarkerInfoNode): MarkerNode {\n        const id = parent.id + '_' + index;\n        const existing = this.getNode(id);\n        if (MarkerNode.is(existing)) {\n            existing.marker = marker;\n            return existing;\n        }\n        return {\n            id,\n            name: 'marker',\n            parent,\n            selected: false,\n            uri: parent.uri,\n            marker\n        };\n    }\n}\n\nexport interface MarkerNode extends UriSelection, SelectableTreeNode, ProblemSelection {\n    marker: Marker<object>;\n}\nexport namespace MarkerNode {\n    export function is(node: TreeNode | undefined): node is MarkerNode {\n        return UriSelection.is(node) && SelectableTreeNode.is(node) && ProblemSelection.is(node);\n    }\n}\n\nexport interface MarkerInfoNode extends UriSelection, SelectableTreeNode, ExpandableTreeNode {\n    parent: MarkerRootNode;\n    numberOfMarkers: number;\n    severity?: DiagnosticSeverity;\n}\nexport namespace MarkerInfoNode {\n    export function is(node: unknown): node is MarkerInfoNode {\n        return ExpandableTreeNode.is(node) && UriSelection.is(node) && 'numberOfMarkers' in node;\n    }\n}\n\nexport interface MarkerRootNode extends CompositeTreeNode {\n    kind: string;\n}\nexport namespace MarkerRootNode {\n    export function is(node: TreeNode | undefined): node is MarkerRootNode {\n        return CompositeTreeNode.is(node) && 'kind' in node;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CompositeTreeNode } from '@theia/core/lib/browser/tree/tree';\nimport { MarkerInfoNode } from '../marker-tree';\nimport URI from '@theia/core/lib/common/uri';\nimport { Marker } from '../../common/marker';\nimport { Diagnostic, DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { ProblemUtils } from './problem-utils';\n\nexport namespace ProblemCompositeTreeNode {\n\n    export function setSeverity(parent: MarkerInfoNode, markers: Marker<Diagnostic>[]): void {\n        let maxSeverity: DiagnosticSeverity | undefined;\n        markers.forEach(marker => {\n            if (ProblemUtils.severityCompare(marker.data.severity, maxSeverity) < 0) {\n                maxSeverity = marker.data.severity;\n            }\n        });\n        parent.severity = maxSeverity;\n    };\n\n    export function addChildren(parent: CompositeTreeNode, insertChildren: { node: MarkerInfoNode, markers: Marker<Diagnostic>[] }[]): void {\n        for (const { node, markers } of insertChildren) {\n            ProblemCompositeTreeNode.setSeverity(node, markers);\n        }\n\n        const sortedInsertChildren = insertChildren.sort(\n            (a, b) => (ProblemUtils.severityCompare(a.node.severity, b.node.severity) || compareURI(a.node.uri, b.node.uri))\n        );\n\n        let startIndex = 0;\n        const children = parent.children as MarkerInfoNode[];\n        for (const { node } of sortedInsertChildren) {\n            const index = children.findIndex(value => value.id === node.id);\n            if (index !== -1) {\n                CompositeTreeNode.removeChild(parent, node);\n            }\n            if (children.length === 0) {\n                children.push(node);\n                startIndex = 1;\n                CompositeTreeNode.setParent(node, 0, parent);\n            } else {\n                let inserted = false;\n                for (let i = startIndex; i < children.length; i++) {\n                    // sort by severity, equal severity => sort by URI\n                    if (ProblemUtils.severityCompare(node.severity, children[i].severity) < 0\n                        || (ProblemUtils.severityCompare(node.severity, children[i].severity) === 0 && compareURI(node.uri, children[i].uri) < 0)) {\n                        children.splice(i, 0, node);\n                        inserted = true;\n                        startIndex = i + 1;\n                        CompositeTreeNode.setParent(node, i, parent);\n                        break;\n                    };\n                }\n                if (inserted === false) {\n                    children.push(node);\n                    startIndex = children.length;\n                    CompositeTreeNode.setParent(node, children.length - 1, parent);\n                }\n            }\n        }\n    }\n\n    const compareURI = (uri1: URI, uri2: URI): number =>\n        uri1.toString().localeCompare(uri2.toString(), undefined, { sensitivity: 'base' });\n    ;\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { MarkerOptions } from '../marker-tree';\nimport { ProblemWidget } from './problem-widget';\nimport { ProblemTreeModel, ProblemTree } from './problem-tree-model';\nimport { TreeProps, defaultTreeProps, createTreeContainer } from '@theia/core/lib/browser';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\n\nexport const PROBLEM_TREE_PROPS = <TreeProps>{\n    ...defaultTreeProps,\n    contextMenuPath: [PROBLEM_KIND],\n    globalSelection: true\n};\n\nexport const PROBLEM_OPTIONS = <MarkerOptions>{\n    kind: 'problem'\n};\n\nexport function createProblemTreeContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent, {\n        tree: ProblemTree,\n        widget: ProblemWidget,\n        model: ProblemTreeModel,\n        props: PROBLEM_TREE_PROPS,\n    });\n    child.bind(MarkerOptions).toConstantValue(PROBLEM_OPTIONS);\n    return child;\n}\n\nexport function createProblemWidget(parent: interfaces.Container): ProblemWidget {\n    return createProblemTreeContainer(parent).get(ProblemWidget);\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { FrontendApplication, FrontendApplicationContribution, CompositeTreeNode, SelectableTreeNode, Widget, codicon } from '@theia/core/lib/browser';\nimport { StatusBar, StatusBarAlignment } from '@theia/core/lib/browser/status-bar/status-bar';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { PROBLEM_KIND, ProblemMarker } from '../../common/problem-marker';\nimport { ProblemManager, ProblemStat } from './problem-manager';\nimport { ProblemWidget, PROBLEMS_WIDGET_ID } from './problem-widget';\nimport { MenuPath, MenuModelRegistry } from '@theia/core/lib/common/menu';\nimport { Command, CommandRegistry } from '@theia/core/lib/common/command';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { ProblemSelection } from './problem-selection';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const PROBLEMS_CONTEXT_MENU: MenuPath = [PROBLEM_KIND];\n\nexport namespace ProblemsMenu {\n    export const CLIPBOARD = [...PROBLEMS_CONTEXT_MENU, '1_clipboard'];\n    export const PROBLEMS = [...PROBLEMS_CONTEXT_MENU, '2_problems'];\n}\n\nexport namespace ProblemsCommands {\n    export const COLLAPSE_ALL: Command = {\n        id: 'problems.collapse.all'\n    };\n    export const COLLAPSE_ALL_TOOLBAR: Command = {\n        id: 'problems.collapse.all.toolbar',\n        iconClass: codicon('collapse-all')\n    };\n    export const COPY: Command = {\n        id: 'problems.copy'\n    };\n    export const COPY_MESSAGE: Command = {\n        id: 'problems.copy.message',\n    };\n    export const CLEAR_ALL = Command.toLocalizedCommand({\n        id: 'problems.clear.all',\n        category: 'Problems',\n        label: 'Clear All',\n        iconClass: codicon('clear-all')\n    }, 'theia/markers/clearAll', nls.getDefaultKey('Problems'));\n}\n\n@injectable()\nexport class ProblemContribution extends AbstractViewContribution<ProblemWidget> implements FrontendApplicationContribution, TabBarToolbarContribution {\n\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n    @inject(StatusBar) protected readonly statusBar: StatusBar;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    constructor() {\n        super({\n            widgetId: PROBLEMS_WIDGET_ID,\n            widgetName: nls.localizeByDefault('Problems'),\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'problemsView:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+m'\n        });\n    }\n\n    onStart(app: FrontendApplication): void {\n        this.updateStatusBarElement();\n        this.problemManager.onDidChangeMarkers(this.updateStatusBarElement);\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n\n    protected updateStatusBarElement = debounce(() => this.setStatusBarElement(this.problemManager.getProblemStat()), 10);\n    protected setStatusBarElement(problemStat: ProblemStat): void {\n        this.statusBar.setElement('problem-marker-status', {\n            text: problemStat.infos <= 0\n                ? `$(codicon-error) ${problemStat.errors} $(codicon-warning) ${problemStat.warnings}`\n                : `$(codicon-error) ${problemStat.errors} $(codicon-warning) ${problemStat.warnings} $(codicon-info) ${problemStat.infos}`,\n            alignment: StatusBarAlignment.LEFT,\n            priority: 10,\n            command: this.toggleCommand ? this.toggleCommand.id : undefined,\n            tooltip: this.getStatusBarTooltip(problemStat)\n        });\n    }\n\n    /**\n     * Get the tooltip to be displayed when hovering over the problem statusbar item.\n     * - Displays `No Problems` when no problems are present.\n     * - Displays a human-readable label which describes for each type of problem stat properties,\n     * their overall count and type when any one of these properties has a positive count.\n     * @param stat the problem stat describing the number of `errors`, `warnings` and `infos`.\n     *\n     * @return the tooltip to be displayed in the statusbar.\n     */\n    protected getStatusBarTooltip(stat: ProblemStat): string {\n        if (stat.errors <= 0 && stat.warnings <= 0 && stat.infos <= 0) {\n            return nls.localizeByDefault('No Problems');\n        }\n        const tooltip: string[] = [];\n        if (stat.errors > 0) {\n            tooltip.push(nls.localizeByDefault('{0} Errors', stat.errors));\n        }\n        if (stat.warnings > 0) {\n            tooltip.push(nls.localizeByDefault('{0} Warnings', stat.warnings));\n        }\n        if (stat.infos > 0) {\n            tooltip.push(nls.localizeByDefault('{0} Infos', stat.infos));\n        }\n        return tooltip.join(', ');\n\n    }\n\n    override registerCommands(commands: CommandRegistry): void {\n        super.registerCommands(commands);\n        commands.registerCommand(ProblemsCommands.COLLAPSE_ALL, {\n            execute: () => this.collapseAllProblems()\n        });\n        commands.registerCommand(ProblemsCommands.COLLAPSE_ALL_TOOLBAR, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, () => this.collapseAllProblems())\n        });\n        commands.registerCommand(ProblemsCommands.COPY,\n            new ProblemSelection.CommandHandler(this.selectionService, {\n                multi: false,\n                isEnabled: () => true,\n                isVisible: () => true,\n                execute: selection => this.copy(selection)\n            })\n        );\n        commands.registerCommand(ProblemsCommands.COPY_MESSAGE,\n            new ProblemSelection.CommandHandler(this.selectionService, {\n                multi: false,\n                isEnabled: () => true,\n                isVisible: () => true,\n                execute: selection => this.copyMessage(selection)\n            })\n        );\n        commands.registerCommand(ProblemsCommands.CLEAR_ALL, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, () => this.problemManager.cleanAllMarkers())\n        });\n    }\n\n    override registerMenus(menus: MenuModelRegistry): void {\n        super.registerMenus(menus);\n        menus.registerMenuAction(ProblemsMenu.CLIPBOARD, {\n            commandId: ProblemsCommands.COPY.id,\n            label: nls.localizeByDefault('Copy'),\n            order: '0'\n        });\n        menus.registerMenuAction(ProblemsMenu.CLIPBOARD, {\n            commandId: ProblemsCommands.COPY_MESSAGE.id,\n            label: nls.localizeByDefault('Copy Message'),\n            order: '1'\n        });\n        menus.registerMenuAction(ProblemsMenu.PROBLEMS, {\n            commandId: ProblemsCommands.COLLAPSE_ALL.id,\n            label: nls.localizeByDefault('Collapse All'),\n            order: '2'\n        });\n    }\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: ProblemsCommands.COLLAPSE_ALL_TOOLBAR.id,\n            command: ProblemsCommands.COLLAPSE_ALL_TOOLBAR.id,\n            tooltip: nls.localizeByDefault('Collapse All'),\n            priority: 0,\n        });\n        toolbarRegistry.registerItem({\n            id: ProblemsCommands.CLEAR_ALL.id,\n            command: ProblemsCommands.CLEAR_ALL.id,\n            tooltip: ProblemsCommands.CLEAR_ALL.label,\n            priority: 1,\n        });\n    }\n\n    protected async collapseAllProblems(): Promise<void> {\n        const { model } = await this.widget;\n        const root = model.root as CompositeTreeNode;\n        const firstChild = root.children[0];\n        root.children.forEach(child => CompositeTreeNode.is(child) && model.collapseAll(child));\n        if (SelectableTreeNode.is(firstChild)) {\n            model.selectNode(firstChild);\n        }\n    }\n\n    protected addToClipboard(content: string): void {\n        const handleCopy = (e: ClipboardEvent) => {\n            document.removeEventListener('copy', handleCopy);\n            if (e.clipboardData) {\n                e.clipboardData.setData('text/plain', content);\n                e.preventDefault();\n            }\n        };\n        document.addEventListener('copy', handleCopy);\n        document.execCommand('copy');\n    }\n\n    protected copy(selection: ProblemSelection): void {\n        const marker = selection.marker as ProblemMarker;\n        const serializedProblem = JSON.stringify({\n            resource: marker.uri,\n            owner: marker.owner,\n            code: marker.data.code,\n            severity: marker.data.severity,\n            message: marker.data.message,\n            source: marker.data.source,\n            startLineNumber: marker.data.range.start.line,\n            startColumn: marker.data.range.start.character,\n            endLineNumber: marker.data.range.end.line,\n            endColumn: marker.data.range.end.character\n        }, undefined, '\\t');\n\n        this.addToClipboard(serializedProblem);\n    }\n\n    protected copyMessage(selection: ProblemSelection): void {\n        const marker = selection.marker as ProblemMarker;\n        this.addToClipboard(marker.data.message);\n    }\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (problems: ProblemWidget) => T): T | false {\n        if (widget instanceof ProblemWidget && widget.id === PROBLEMS_WIDGET_ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Decoration, DecorationsProvider, DecorationsService } from '@theia/core/lib/browser/decorations-service';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemUtils } from './problem-utils';\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { CancellationToken, Emitter, Event, nls } from '@theia/core';\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\n@injectable()\nexport class ProblemDecorationsProvider implements DecorationsProvider {\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n\n    protected currentUris: URI[] = [];\n\n    protected readonly onDidChangeEmitter = new Emitter<URI[]>();\n    get onDidChange(): Event<URI[]> {\n        return this.onDidChangeEmitter.event;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.problemManager.onDidChangeMarkers(() => this.fireDidDecorationsChanged());\n    }\n\n    protected fireDidDecorationsChanged = debounce(() => this.doFireDidDecorationsChanged(), 50);\n\n    protected doFireDidDecorationsChanged(): void {\n        const newUris = Array.from(this.problemManager.getUris(), stringified => new URI(stringified));\n        this.onDidChangeEmitter.fire(newUris.concat(this.currentUris));\n        this.currentUris = newUris;\n    }\n\n    provideDecorations(uri: URI, token: CancellationToken): Decoration | Promise<Decoration | undefined> | undefined {\n        const markers = this.problemManager.findMarkers({ uri }).filter(ProblemUtils.filterMarker).sort(ProblemUtils.severityCompareMarker);\n        if (markers.length) {\n            return {\n                bubble: true,\n                letter: markers.length.toString(),\n                weight: ProblemUtils.getPriority(markers[0]),\n                colorId: ProblemUtils.getColor(markers[0]),\n                tooltip: markers.length === 1 ? nls.localizeByDefault('1 problem in this file') : nls.localizeByDefault('{0} problems in this file', markers.length),\n            };\n        }\n    }\n}\n\n@injectable()\nexport class ProblemDecorationContribution implements FrontendApplicationContribution {\n    @inject(DecorationsService) protected readonly decorationsService: DecorationsService;\n    @inject(ProblemDecorationsProvider) protected readonly problemDecorationProvider: ProblemDecorationsProvider;\n\n    initialize(): void {\n        this.decorationsService.registerDecorationsProvider(this.problemDecorationProvider);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport '../../../src/browser/style/index.css';\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { ProblemWidget, PROBLEMS_WIDGET_ID } from './problem-widget';\nimport { ProblemContribution } from './problem-contribution';\nimport { createProblemWidget } from './problem-container';\nimport { FrontendApplicationContribution, bindViewContribution, ApplicationShellLayoutMigration, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { ProblemManager } from './problem-manager';\nimport { WidgetFactory } from '@theia/core/lib/browser/widget-manager';\nimport { ProblemTabBarDecorator } from './problem-tabbar-decorator';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { ProblemLayoutVersion3Migration } from './problem-layout-migrations';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { bindProblemPreferences } from './problem-preferences';\nimport { MarkerTreeLabelProvider } from '../marker-tree-label-provider';\nimport { ProblemWidgetTabBarDecorator } from './problem-widget-tab-bar-decorator';\nimport { ProblemDecorationContribution, ProblemDecorationsProvider } from './problem-decorations-provider';\n\nexport default new ContainerModule(bind => {\n    bindProblemPreferences(bind);\n\n    bind(ProblemManager).toSelf().inSingletonScope();\n\n    bind(ProblemWidget).toDynamicValue(ctx =>\n        createProblemWidget(ctx.container)\n    );\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PROBLEMS_WIDGET_ID,\n        createWidget: () => context.container.get<ProblemWidget>(ProblemWidget)\n    }));\n    bind(ApplicationShellLayoutMigration).to(ProblemLayoutVersion3Migration).inSingletonScope();\n\n    bindViewContribution(bind, ProblemContribution);\n    bind(FrontendApplicationContribution).toService(ProblemContribution);\n    bind(TabBarToolbarContribution).toService(ProblemContribution);\n\n    bind(ProblemDecorationsProvider).toSelf().inSingletonScope();\n    bind(ProblemTabBarDecorator).toSelf().inSingletonScope();\n    bind(TabBarDecorator).toService(ProblemTabBarDecorator);\n    bind(ProblemDecorationContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(ProblemDecorationContribution);\n\n    bind(MarkerTreeLabelProvider).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(MarkerTreeLabelProvider);\n\n    bind(ProblemWidgetTabBarDecorator).toSelf().inSingletonScope();\n    bind(TabBarDecorator).toService(ProblemWidgetTabBarDecorator);\n});\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { ApplicationShellLayoutMigration, WidgetDescription } from '@theia/core/lib/browser/shell/shell-layout-restorer';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\nimport { PROBLEMS_WIDGET_ID } from './problem-widget';\n\n@injectable()\nexport class ProblemLayoutVersion3Migration implements ApplicationShellLayoutMigration {\n    readonly layoutVersion = 3.0;\n    onWillInflateWidget(desc: WidgetDescription): WidgetDescription | undefined {\n        if (desc.constructionOptions.factoryId === PROBLEM_KIND) {\n            desc.constructionOptions.factoryId = PROBLEMS_WIDGET_ID;\n            return desc;\n        }\n        return undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const ProblemConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'problems.decorations.enabled': {\n            'type': 'boolean',\n            'description': nls.localizeByDefault('Show Errors & Warnings on files and folder.'),\n            'default': true,\n        },\n        'problems.decorations.tabbar.enabled': {\n            'type': 'boolean',\n            'description': nls.localize('theia/markers/tabbarDecorationsEnabled', 'Show problem decorators (diagnostic markers) in the tab bars.'),\n            'default': true\n        },\n        'problems.autoReveal': {\n            'type': 'boolean',\n            'description': nls.localizeByDefault('Controls whether Problems view should automatically reveal files when opening them.'),\n            'default': true\n        }\n    }\n};\n\nexport interface ProblemConfiguration {\n    'problems.decorations.enabled': boolean,\n    'problems.decorations.tabbar.enabled': boolean,\n    'problems.autoReveal': boolean\n}\n\nexport const ProblemPreferenceContribution = Symbol('ProblemPreferenceContribution');\nexport const ProblemPreferences = Symbol('ProblemPreferences');\nexport type ProblemPreferences = PreferenceProxy<ProblemConfiguration>;\n\nexport function createProblemPreferences(preferences: PreferenceService, schema: PreferenceSchema = ProblemConfigSchema): ProblemPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport const bindProblemPreferences = (bind: interfaces.Bind): void => {\n    bind(ProblemPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(ProblemPreferenceContribution);\n        return createProblemPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(ProblemPreferenceContribution).toConstantValue({ schema: ProblemConfigSchema });\n    bind(PreferenceContribution).toService(ProblemPreferenceContribution);\n};\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { SelectionCommandHandler } from '@theia/core/lib/common/selection-command-handler';\nimport { isObject } from '@theia/core/lib/common';\nimport { Marker } from '../../common/marker';\nimport { ProblemMarker } from '../../common/problem-marker';\n\nexport interface ProblemSelection {\n    marker: Marker<object>;\n}\nexport namespace ProblemSelection {\n    export function is(arg: unknown): arg is ProblemSelection {\n        return isObject<ProblemSelection>(arg) && ProblemMarker.is(arg.marker);\n    }\n\n    export class CommandHandler extends SelectionCommandHandler<ProblemSelection> {\n\n        constructor(\n            selectionService: SelectionService,\n            options: SelectionCommandHandler.Options<ProblemSelection>\n        ) {\n            super(\n                selectionService,\n                arg => ProblemSelection.is(arg) ? arg : undefined,\n                options\n            );\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Diagnostic, DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Title, Widget } from '@theia/core/shared/@phosphor/widgets';\nimport { WidgetDecoration } from '@theia/core/lib/browser/widget-decoration';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { Marker } from '../../common/marker';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemPreferences, ProblemConfiguration } from './problem-preferences';\nimport { PreferenceChangeEvent, Navigatable } from '@theia/core/lib/browser';\n\n@injectable()\nexport class ProblemTabBarDecorator implements TabBarDecorator {\n\n    readonly id = 'theia-problem-tabbar-decorator';\n\n    protected readonly emitter = new Emitter<void>();\n\n    @inject(ProblemPreferences)\n    protected readonly preferences: ProblemPreferences;\n\n    @inject(ProblemManager)\n    protected readonly problemManager: ProblemManager;\n\n    @postConstruct()\n    protected init(): void {\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations());\n        this.preferences.onPreferenceChanged(event => this.handlePreferenceChange(event));\n    }\n\n    decorate(title: Title<Widget>): WidgetDecoration.Data[] {\n        if (!this.preferences['problems.decorations.tabbar.enabled']) {\n            return [];\n        }\n        const widget = title.owner;\n        if (Navigatable.is(widget)) {\n            const resourceUri = widget.getResourceUri();\n            if (resourceUri) {\n                // Get the list of problem markers for the given resource URI.\n                const markers: Marker<Diagnostic>[] = this.problemManager.findMarkers({ uri: resourceUri });\n                // If no markers are available, return early.\n                if (markers.length === 0) {\n                    return [];\n                }\n                // Store the marker with the highest severity.\n                let maxSeverity: Marker<Diagnostic> | undefined;\n                // Iterate over available markers to determine that which has the highest severity.\n                // Only display a decoration if an error or warning marker is available.\n                for (const marker of markers) {\n                    // Break early if an error marker is present, since it represents the highest severity.\n                    if (marker.data.severity === DiagnosticSeverity.Error) {\n                        maxSeverity = marker;\n                        break;\n                    } else if (marker.data.severity === DiagnosticSeverity.Warning) {\n                        maxSeverity = marker;\n                    }\n                }\n                // Decorate the tabbar with the highest marker severity if available.\n                return maxSeverity ? [this.toDecorator(maxSeverity)] : [];\n            }\n        }\n        return [];\n    }\n\n    get onDidChangeDecorations(): Event<void> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(): void {\n        this.emitter.fire(undefined);\n    }\n\n    /**\n     * Handle changes in preference.\n     * @param {PreferenceChangeEvent<ProblemConfiguration>} event The event of the changes in preference.\n     */\n    protected async handlePreferenceChange(event: PreferenceChangeEvent<ProblemConfiguration>): Promise<void> {\n        const { preferenceName } = event;\n        if (preferenceName === 'problems.decorations.tabbar.enabled') {\n            this.fireDidChangeDecorations();\n        }\n    }\n\n    /**\n     * Convert a diagnostic marker to a decorator.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {WidgetDecoration.Data} The decoration data.\n     */\n    protected toDecorator(marker: Marker<Diagnostic>): WidgetDecoration.Data {\n        const position = WidgetDecoration.IconOverlayPosition.BOTTOM_RIGHT;\n        const icon = this.getOverlayIcon(marker);\n        const color = this.getOverlayIconColor(marker);\n        return {\n            iconOverlay: {\n                position,\n                icon,\n                color,\n                background: {\n                    shape: 'circle',\n                    color: 'transparent'\n                }\n            }\n        };\n    }\n\n    /**\n     * Get the appropriate overlay icon for decoration.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {string} A string representing the overlay icon class.\n     */\n    protected getOverlayIcon(marker: Marker<Diagnostic>): string {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'times-circle';\n            case 2: return 'exclamation-circle';\n            case 3: return 'info-circle';\n            default: return 'hand-o-up';\n        }\n    }\n\n    /**\n     * Get the appropriate overlay icon color for decoration.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {WidgetDecoration.Color} The decoration color.\n     */\n    protected getOverlayIconColor(marker: Marker<Diagnostic>): WidgetDecoration.Color {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'var(--theia-list-errorForeground)';\n            case 2: return 'var(--theia-list-warningForeground)';\n            default: return 'var(--theia-successBackground)';\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ProblemMarker } from '../../common/problem-marker';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemCompositeTreeNode } from './problem-composite-tree-node';\nimport { MarkerNode, MarkerTree, MarkerOptions, MarkerInfoNode, MarkerRootNode } from '../marker-tree';\nimport { MarkerTreeModel } from '../marker-tree-model';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { OpenerOptions, TreeNode } from '@theia/core/lib/browser';\nimport { Marker } from '../../common/marker';\nimport { Diagnostic } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { ProblemUtils } from './problem-utils';\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\n@injectable()\nexport class ProblemTree extends MarkerTree<Diagnostic> {\n    protected markers: { node: MarkerInfoNode, markers: Marker<Diagnostic>[] }[] = [];\n\n    constructor(\n        @inject(ProblemManager) markerManager: ProblemManager,\n        @inject(MarkerOptions) markerOptions: MarkerOptions\n    ) {\n        super(markerManager, markerOptions);\n    }\n\n    protected override getMarkerNodes(parent: MarkerInfoNode, markers: Marker<Diagnostic>[]): MarkerNode[] {\n        const nodes = super.getMarkerNodes(parent, markers);\n        return nodes.sort((a, b) => this.sortMarkers(a, b));\n    }\n\n    /**\n     * Sort markers based on the following rules:\n     * - Markers are fist sorted by `severity`.\n     * - Markers are sorted by `line number` if applicable.\n     * - Markers are sorted by `column number` if applicable.\n     * - Markers are then finally sorted by `owner` if applicable.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    protected sortMarkers(a: MarkerNode, b: MarkerNode): number {\n        const markerA = a.marker as Marker<Diagnostic>;\n        const markerB = b.marker as Marker<Diagnostic>;\n\n        // Determine the marker with the highest severity.\n        const severity = ProblemUtils.severityCompareMarker(markerA, markerB);\n        if (severity !== 0) {\n            return severity;\n        }\n        // Determine the marker with the lower line number.\n        const lineNumber = ProblemUtils.lineNumberCompare(markerA, markerB);\n        if (lineNumber !== 0) {\n            return lineNumber;\n        }\n        // Determine the marker with the lower column number.\n        const columnNumber = ProblemUtils.columnNumberCompare(markerA, markerB);\n        if (columnNumber !== 0) {\n            return columnNumber;\n        }\n        // Sort by owner in alphabetical order.\n        const owner = ProblemUtils.ownerCompare(markerA, markerB);\n        if (owner !== 0) {\n            return owner;\n        }\n        return 0;\n    }\n\n    protected override insertNodeWithMarkers(node: MarkerInfoNode, markers: Marker<Diagnostic>[]): void {\n        this.markers.push({ node, markers });\n        this.doInsertNodesWithMarkers();\n    }\n\n    protected doInsertNodesWithMarkers = debounce(() => {\n        ProblemCompositeTreeNode.addChildren(this.root as MarkerRootNode, this.markers);\n\n        for (const { node, markers } of this.markers) {\n            const children = this.getMarkerNodes(node, markers);\n            node.numberOfMarkers = markers.length;\n            this.setChildren(node, children);\n        }\n\n        this.markers.length = 0;\n    }, 50);\n}\n\n@injectable()\nexport class ProblemTreeModel extends MarkerTreeModel {\n\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n\n    protected override getOpenerOptionsByMarker(node: MarkerNode): OpenerOptions | undefined {\n        if (ProblemMarker.is(node.marker)) {\n            return {\n                selection: node.marker.data.range\n            };\n        }\n        return undefined;\n    }\n\n    removeNode(node: TreeNode): void {\n        if (MarkerInfoNode.is(node)) {\n            this.problemManager.cleanAllMarkers(node.uri);\n        }\n        if (MarkerNode.is(node)) {\n            const { uri } = node;\n            const { owner } = node.marker;\n            const diagnostics = this.problemManager.findMarkers({ uri, owner, dataFilter: data => node.marker.data !== data }).map(({ data }) => data);\n            this.problemManager.setMarkers(uri, owner, diagnostics);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Marker } from '../../common/marker';\nimport { Diagnostic, DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport namespace ProblemUtils {\n\n    /**\n     * Comparator for severity.\n     * - The highest severity (`error`) come first followed by others.\n     * - `undefined` severities are treated as the last ones.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const severityCompareMarker = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number =>\n        (a.data.severity || Number.MAX_SAFE_INTEGER) - (b.data.severity || Number.MAX_SAFE_INTEGER);\n\n    /**\n     * Comparator for severity.\n     * - The highest severity (`error`) come first followed by others.\n     * - `undefined` severities are treated as the last ones.\n     * @param a the first severity for comparison.\n     * @param b the second severity for comparison.\n     */\n    export const severityCompare = (a: DiagnosticSeverity | undefined, b: DiagnosticSeverity | undefined): number =>\n        (a || Number.MAX_SAFE_INTEGER) - (b || Number.MAX_SAFE_INTEGER);\n\n    /**\n     * Comparator for line numbers.\n     * - The lowest line number comes first.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const lineNumberCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.data.range.start.line - b.data.range.start.line;\n\n    /**\n     * Comparator for column numbers.\n     * - The lowest column number comes first.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const columnNumberCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.data.range.start.character - b.data.range.start.character;\n\n    /**\n     * Comparator for marker owner (source).\n     * - The order is alphabetical.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const ownerCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.owner.localeCompare(b.owner);\n\n    export function getPriority(marker: Marker<Diagnostic>): number {\n        const { severity } = marker.data;\n        switch (severity) {\n            case DiagnosticSeverity.Error: return 30;\n            case DiagnosticSeverity.Warning: return 20;\n            case DiagnosticSeverity.Information: return 10;\n            default: return 0;\n        }\n    }\n\n    export function getColor(marker: Marker<Diagnostic>): string {\n        const { severity } = marker.data;\n        switch (severity) {\n            case DiagnosticSeverity.Error: return 'list.errorForeground';\n            case DiagnosticSeverity.Warning: return 'list.warningForeground';\n            default: return ''; // other severities should not be decorated.\n        }\n    }\n\n    export function filterMarker(marker: Marker<Diagnostic>): boolean {\n        const { severity } = marker.data;\n        return severity === DiagnosticSeverity.Error\n            || severity === DiagnosticSeverity.Warning;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { ProblemManager } from './problem-manager';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { Title, Widget } from '@theia/core/lib/browser';\nimport { WidgetDecoration } from '@theia/core/lib/browser/widget-decoration';\n\n@injectable()\nexport class ProblemWidgetTabBarDecorator implements TabBarDecorator {\n\n    readonly id = 'theia-problems-widget-tabbar-decorator';\n    protected readonly emitter = new Emitter<void>();\n\n    @inject(ProblemManager)\n    protected readonly problemManager: ProblemManager;\n\n    @postConstruct()\n    protected init(): void {\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations());\n    }\n\n    decorate(title: Title<Widget>): WidgetDecoration.Data[] {\n        if (title.owner.id === 'problems') {\n            const { infos, warnings, errors } = this.problemManager.getProblemStat();\n            const markerCount = infos + warnings + errors;\n            return markerCount > 0 ? [{ badge: markerCount }] : [];\n        } else {\n            return [];\n        }\n    }\n\n    get onDidChangeDecorations(): Event<void> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(): void {\n        this.emitter.fire(undefined);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemMarker } from '../../common/problem-marker';\nimport { ProblemTreeModel } from './problem-tree-model';\nimport { MarkerInfoNode, MarkerNode, MarkerRootNode } from '../marker-tree';\nimport {\n    TreeWidget, TreeProps, ContextMenuRenderer, TreeNode, NodeProps, TreeModel,\n    ApplicationShell, Navigatable, ExpandableTreeNode, SelectableTreeNode, TREE_NODE_INFO_CLASS, codicon, Message\n} from '@theia/core/lib/browser';\nimport { DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-protocol';\nimport * as React from '@theia/core/shared/react';\nimport { ProblemPreferences } from './problem-preferences';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const PROBLEMS_WIDGET_ID = 'problems';\n\n@injectable()\nexport class ProblemWidget extends TreeWidget {\n\n    protected readonly toDisposeOnCurrentWidgetChanged = new DisposableCollection();\n\n    @inject(ProblemPreferences)\n    protected readonly preferences: ProblemPreferences;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(ProblemManager)\n    protected readonly problemManager: ProblemManager;\n\n    constructor(\n        @inject(TreeProps) treeProps: TreeProps,\n        @inject(ProblemTreeModel) override readonly model: ProblemTreeModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(treeProps, model, contextMenuRenderer);\n\n        this.id = PROBLEMS_WIDGET_ID;\n        this.title.label = nls.localizeByDefault('Problems');\n        this.title.caption = this.title.label;\n        this.title.iconClass = codicon('warning');\n        this.title.closable = true;\n        this.addClass('theia-marker-container');\n\n        this.addClipboardListener(this.node, 'copy', e => this.handleCopy(e));\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.updateFollowActiveEditor();\n        this.toDispose.push(this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'problems.autoReveal') {\n                this.updateFollowActiveEditor();\n            }\n        }));\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.update();\n    }\n\n    protected updateFollowActiveEditor(): void {\n        this.toDisposeOnCurrentWidgetChanged.dispose();\n        this.toDispose.push(this.toDisposeOnCurrentWidgetChanged);\n        if (this.preferences.get('problems.autoReveal')) {\n            this.followActiveEditor();\n        }\n    }\n\n    protected followActiveEditor(): void {\n        this.autoRevealFromActiveEditor();\n        this.toDisposeOnCurrentWidgetChanged.push(this.shell.onDidChangeCurrentWidget(() => this.autoRevealFromActiveEditor()));\n    }\n\n    protected autoRevealFromActiveEditor(): void {\n        const widget = this.shell.currentWidget;\n        if (widget && Navigatable.is(widget)) {\n            const uri = widget.getResourceUri();\n            const node = uri && this.model.getNode(uri.toString());\n            if (ExpandableTreeNode.is(node) && SelectableTreeNode.is(node)) {\n                this.model.expandNode(node);\n                this.model.selectNode(node);\n            }\n        }\n    }\n\n    override storeState(): object {\n        // no-op\n        return {};\n    }\n    protected superStoreState(): object {\n        return super.storeState();\n    }\n    override restoreState(state: object): void {\n        // no-op\n    }\n    protected superRestoreState(state: object): void {\n        super.restoreState(state);\n        return;\n    }\n\n    protected override tapNode(node?: TreeNode): void {\n        super.tapNode(node);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected handleCopy(event: ClipboardEvent): void {\n        const uris = this.model.selectedNodes.filter(MarkerNode.is).map(node => node.uri.toString());\n        if (uris.length > 0 && event.clipboardData) {\n            event.clipboardData.setData('text/plain', uris.join('\\n'));\n            event.preventDefault();\n        }\n    }\n\n    protected override handleDown(event: KeyboardEvent): void {\n        const node = this.model.getNextSelectableNode();\n        super.handleDown(event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected override handleUp(event: KeyboardEvent): void {\n        const node = this.model.getPrevSelectableNode();\n        super.handleUp(event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected override renderTree(model: TreeModel): React.ReactNode {\n        if (MarkerRootNode.is(model.root) && model.root.children.length > 0) {\n            return super.renderTree(model);\n        }\n        return <div className='theia-widget-noInfo noMarkers'>{nls.localize('theia/markers/noProblems', 'No problems have been detected in the workspace so far.')}</div>;\n    }\n\n    protected override renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (MarkerInfoNode.is(node)) {\n            return this.decorateMarkerFileNode(node);\n        } else if (MarkerNode.is(node)) {\n            return this.decorateMarkerNode(node);\n        }\n        return 'caption';\n    }\n\n    protected override renderTailDecorations(node: TreeNode, props: NodeProps): JSX.Element {\n        return <div className='row-button-container'>\n            {this.renderRemoveButton(node)}\n        </div>;\n    }\n\n    protected renderRemoveButton(node: TreeNode): React.ReactNode {\n        return <ProblemMarkerRemoveButton model={this.model} node={node} />;\n    }\n\n    protected decorateMarkerNode(node: MarkerNode): React.ReactNode {\n        if (ProblemMarker.is(node.marker)) {\n            let severityClass: string = '';\n            const problemMarker = node.marker;\n            if (problemMarker.data.severity) {\n                severityClass = this.getSeverityClass(problemMarker.data.severity);\n            }\n            const location = nls.localizeByDefault('Ln {0}, Col {1}', problemMarker.data.range.start.line + 1, problemMarker.data.range.start.character + 1);\n            return <div\n                className='markerNode'\n                title={`${problemMarker.data.message} (${problemMarker.data.range.start.line + 1}, ${problemMarker.data.range.start.character + 1})`}>\n                <div>\n                    <i className={`${severityClass} ${TREE_NODE_INFO_CLASS}`}></i>\n                </div>\n                <div className='message'>{problemMarker.data.message}\n                    {(!!problemMarker.data.source || !!problemMarker.data.code) &&\n                        <span className={'owner ' + TREE_NODE_INFO_CLASS}>\n                            {problemMarker.data.source || ''}\n                            {problemMarker.data.code ? `(${problemMarker.data.code})` : ''}\n                        </span>\n                    }\n                    <span className={'position ' + TREE_NODE_INFO_CLASS}>\n                        {`[${location}]`}\n                    </span>\n                </div>\n            </div>;\n        }\n        return '';\n    }\n\n    protected getSeverityClass(severity: DiagnosticSeverity): string {\n        switch (severity) {\n            case 1: return `${codicon('error')} error`;\n            case 2: return `${codicon('warning')} warning`;\n            case 3: return `${codicon('info')} information`;\n            default: return `${codicon('thumbsup')} hint`;\n        }\n    }\n\n    protected decorateMarkerFileNode(node: MarkerInfoNode): React.ReactNode {\n        const icon = this.toNodeIcon(node);\n        const name = this.toNodeName(node);\n        const description = this.toNodeDescription(node);\n        // Use a custom scheme so that we fallback to the `DefaultUriLabelProviderContribution`.\n        const path = this.labelProvider.getLongName(node.uri.withScheme('marker'));\n        return <div title={path} className='markerFileNode'>\n            {icon && <div className={icon + ' file-icon'}></div>}\n            <div className='name'>{name}</div>\n            <div className={'path ' + TREE_NODE_INFO_CLASS}>{description}</div>\n            <div className='notification-count-container'>\n                <span className='notification-count'>{node.numberOfMarkers.toString()}</span>\n            </div>\n        </div>;\n    }\n\n}\n\nexport class ProblemMarkerRemoveButton extends React.Component<{ model: ProblemTreeModel, node: TreeNode }> {\n\n    override render(): React.ReactNode {\n        return <span className={codicon('close')} onClick={this.remove}></span>;\n    }\n\n    protected readonly remove = (e: React.MouseEvent<HTMLElement>) => this.doRemove(e);\n    protected doRemove(e: React.MouseEvent<HTMLElement>): void {\n        this.props.model.removeNode(this.props.node);\n        e.stopPropagation();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './canonical-uri-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\nexport * from './workspace-trust-service';\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}